# -*- coding: utf-8 -*-
"""Ironhack_starter_kit_recommendator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UWk_1EoI0DG91sgRRXcLiauVWbgqXSJp
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import time
import re
import sys
from simple_colors import *
from IPython.display import clear_output
import random
import yagmail
import getpass

colors = [red,magenta,yellow,green,blue,cyan,red,magenta,yellow,green,blue,cyan,red,magenta,yellow,green,blue,cyan]

def print_slowly(text):
    count=0
    for c in text:
        print(colors[count](c,'italic')),
        sys.stdout.flush()
        count+=1
        time.sleep(0.25)

#Import laptops CSV

laptops = pd.read_csv('laptops.csv',header=0,index_col=0)
laptops

#Import screens CSV

screens = pd.read_csv('screens.csv',header=0,index_col=0)
screens

#INTRODUCING THE PROGRAM TO THE USER

print(blue('# Ironhack Kit Starter Recommendation System #', 'bold'))
time.sleep(1.5)
print('\n')

print('Are you starting your '+(black('Ironhack adventure ','bold'))+'and still need a '+(black('new equipment','bold'))+ ' to work with?')
time.sleep(2.5)
print('\n')

print('ü§© Please, let us help you!')
time.sleep(1.5)
print('\n')

print_slowly('# LOADING #')
print('\n')
time.sleep(1)
clear_output(wait=True)

#ASKING FOR THE NAME

n = print('ü§î First we need to know your '+(black('name ','bold'))+': ')
print('\n')
time.sleep(0.5)
n = str(input('Name: '))
time.sleep(1.5)
print('\n')

print_slowly('# LOADING #')
print('\n')
time.sleep(1)
clear_output(wait=True)

#ASKING FOR THE EMAIL

e = print('Welcome '+(black(n,'italic'))+'! We need also your üìß ' +(black('email','bold'))+' to send you our recommendations : ')
print('\n')
time.sleep(0.5)
e = str(input('Email: '))
print('\n')
i = False
while i == False:
  
  if not ("@") in e:
    print(e+ red(' does not like an email. Please, try again'))
    print('\n')
    time.sleep(0.5)
    e = str(input('Email: '))
    print('\n')
  else:
    i = True
    print_slowly('# LOADING #')

print('\n')
print(green('Thank you for sharing us your email!'))
print('\n')
time.sleep(1.5)
clear_output(wait=True)


#PICK A CHOICE BETWEEN ITEMS OR BRAND INFO
m = True

while m == True:

  print('We can give you a recommendation about which '+(black('kit set','bold'))+(black(' (laptop+screen) ','italic'))+ 'fits better for you, or general info about ' +(black('laptop/screen brands','bold')))

  time.sleep(1)
  print('\n')

  print('What '+(black('information ','bold'))+'are you interested in?')
  print('\n')
  time.sleep(0.5)
  print('‚ùì 1. Information about laptop/screen Brands')
  print('üíª 2. Best Kit Starter for you')
  print('üí® 3. EXIT')
  print('\n')
  choice1 = str(input('Write the number of your choice: '))
  time.sleep(0.5)

  i = False
  list=['1','2']
  list1=['1','2','3'] 

  while i == False:

    if choice1 not in list1:
      print('\n')
      print(red('Wrong. Please, try again'))
      print('\n')
      time.sleep(0.5)
      print('‚ùì 1. Information about laptop/screen Brands')
      print('üíª 2. Best Starter Kit for you')
      print('\n')
      choice1 = str(input('Write the number of your choice: '))
      time.sleep(0.5)

    elif choice1 == '3':
      print('\n')
      print('Goodbye! See you soon.')
      m = False
      break

    else:
      i = True
      print('\n')
      print_slowly('# LOADING #')

  time.sleep(1.5)
  print('\n')
  clear_output(wait=True)

  #FOLLOW UP WITH THE CHOSEN CHOICE

  #CHOICE = 1 - BRAND INFORMATION
  #1ST - LAPTOP OR SCREEN?

  if choice1 == '1':
    print('The '+(black('brand of which object ','bold'))+' are you interested in?')
    print('\n')
    time.sleep(0.5)
    print('üíª 1. Laptop')
    print('üì∫ 2. Screen')
    print('\n')
    choice2 = str(input('Write the number of your choice: '))
    time.sleep(0.5)

    i = False
    
    while i == False:

      if choice2 not in list:
        print('\n')
        print(red('Wrong. Please, try again'))
        print('\n')
        time.sleep(0.5)
        print('üíª 1. Laptop')
        print('üì∫ 2. Screen')
        print('\n')
        choice2 = str(input('Write the number of your choice: '))
        time.sleep(0.5)

      else:
        i = True
        print('\n')
        print_slowly('# LOADING #')

    time.sleep(1.5)
    print('\n')
    clear_output(wait=True)

  #2ND - BRAND NEW OR SECOND HAND

    print('Are you interested in '+(black('Brand New','bold'))+' or '+(black('Second-hand','bold'))+' items?')
    print('\n')
    time.sleep(0.5)
    print('üë∂ 1. Brand New')
    print('üë¥ 2. Second-hand')
    print('\n')
    choice3 = str(input('Write the number of your choice: '))
    time.sleep(0.5)

    i = False
    
    while i == False:

      if choice3 not in list:
        print('\n')
        print(red('Wrong. Please, try again'))
        print('\n')
        time.sleep(0.5)
        print('üë∂ 1. Brand New')
        print('üë¥ 2. Second-hand')
        print('\n')
        choice3 = str(input('Write the number of your choice: '))
        time.sleep(0.5)

      else:
        i = True
        print('\n')
        print_slowly('# LOADING #')

    time.sleep(1.5)
    print('\n')
    clear_output(wait=True)

    # BRAND NEW LAPTOP BRANDS
    if choice2 == '1' and choice3 =='1':
      print('These are the '+(black('average New Brand laptop prices','bold'))+' per '+(black('brand','bold'))+' and '+(black('GB.','bold')))
      print('\n')
      brand_laptop_info_new = (laptops[laptops['Product status'] == 'Brand New']).groupby(['Brand','RAM']).agg({'Price':'mean'}).sort_values(by = 'Price', ascending = False).reset_index()
      print(brand_laptop_info_new)
      brand_laptop_info_new.to_csv('recommendation1.csv',encoding='utf-8')
      print('\n')
      print('\n')

    # SECOND HAND LAPTOP BRANDS
    if choice2 == '1' and choice3 =='2':
      print('These are the '+(black('average Second hand laptop prices','bold'))+' per '+(black('brand','bold'))+' and '+(black('GB.','bold')))
      print('\n')
      brand_laptop_info_refur = (laptops[laptops['Product status'] == 'Refurbished']).groupby(['Brand','RAM']).agg({'Price':'mean'}).sort_values(by = 'Price', ascending = False).reset_index()
      print(brand_laptop_info_refur)
      brand_laptop_info_refur.to_csv('recommendation1.csv',encoding='utf-8')
      print('\n')
      print('\n')

    # BRAND NEW SCREENS BRANDS
    if choice2 == '2' and choice3 =='1':
      print('These are the '+(black('average Second hand screen prices','bold'))+' per '+(black('brand','bold'))+' and '+(black('Inches Type.','bold')))
      print('\n')
      print((black('Type Inches Segmentation','bold')))
      print('\n')
      print((black('Type Inch1: ','bold'))+'below 27"')
      print('\n')
      print((black('Type Inch2: ','bold'))+'above 27 and below 40"')
      print('\n')
      print((black('Type Inch3: ','bold'))+'above 40"')
      print('\n')
      brand_screen_info_new = (screens[screens['Product status'] == 'Brand New']).groupby(['Brand','Inches Type']).agg({'Price':'mean'}).sort_values(by = 'Price', ascending = False).reset_index()
      print(brand_screen_info_new)
      brand_screen_info_new.to_csv('recommendation1.csv',encoding='utf-8')
      print('\n')
      print('\n')
   
    # SECOND HAND SCREENS BRANDS
    if choice2 == '2' and choice3 =='2':
      print('These are the '+(black('average Second hand screen prices','bold'))+' per '+(black('brand','bold'))+' and '+(black('Inches.','bold')))
      print('\n')
      print((black('Type Inches Segmentation','bold')))
      print('\n')
      print((black('Type Inch1: ','bold'))+'below 27"')
      print('\n')
      print((black('Type Inch2: ','bold'))+'above 27 and below 40"')
      print('\n')
      print((black('Type Inch3: ','bold'))+'above 40"')
      print('\n')
      brand_screen_info_refur = (screens[screens['Product status'] == 'Refurbished']).groupby(['Brand','Inches Type']).agg({'Price':'mean'}).sort_values(by = 'Price', ascending = False).reset_index()
      print(brand_screen_info_refur)
      brand_screen_info_refur.to_csv('recommendation1.csv',encoding='utf-8')
      print('\n')
      print('\n')


    #CONTINUE?


    print('Do you want to keep going? Y/N')
    print('\n')
    continue1 = str(input('Write your choice: '))
    print('\n')


    if continue1.lower() == 'y':
      m = True
      clear_output(wait=True)
    elif continue1.lower() == 'n':
      m = False
      break
    else:
      m = False
      break



    #BEST STARTER KIT INFO



  elif choice1 == '2':
    #Run code about Best Starter Kit info
    print('GO ON STARTER KIT INFO')
    print((black('Which object ','bold'))+' are you interested in?')
    print('\n')
    time.sleep(0.5)
    print('üíª 1. Laptop')
    print('üì∫ 2. Screen')
    print('\n')
    choice4 = str(input('Write the number of your choice: '))
    time.sleep(0.5)

    i = False
    
    while i == False:

      if choice4 not in list:
        print('\n')
        print(red('Wrong. Please, try again'))
        print('\n')
        time.sleep(0.5)
        print('üíª 1. Laptop')
        print('üì∫ 2. Screen')
        print('\n')
        choice4 = str(input('Write the number of your choice: '))
        time.sleep(0.5)

      else:
        i = True
        print('\n')
        print_slowly('# LOADING #')

    time.sleep(1.5)
    print('\n')
    clear_output(wait=True)

  #2ND - BRAND NEW OR SECOND HAND

    print('Are you interested in '+(black('Brand New','bold'))+' or '+(black('Second-hand','bold'))+' items?')
    print('\n')
    time.sleep(0.5)
    print('üë∂ 1. Brand New')
    print('üë¥ 2. Second-hand')
    print('\n')
    choice5 = str(input('Write the number of your choice: '))
    time.sleep(0.5)

    i = False
    
    while i == False:

      if choice5 not in list:
        print('\n')
        print(red('Wrong. Please, try again'))
        print('\n')
        time.sleep(0.5)
        print('üë∂ 1. Brand New')
        print('üë¥ 2. Second-hand')
        print('\n')
        choice5 = str(input('Write the number of your choice: '))
        time.sleep(0.5)

      else:
        i = True
        print('\n')
        print_slowly('# LOADING #')

    time.sleep(1.5)
    print('\n')
    clear_output(wait=True)

    # BRAND NEW LAPTOPS
    if choice4 == '1' and choice5 =='1':

      print('These are the '+(black('BEST New Brand Laptops','bold'))+' segmented by '+(black('RAM','bold'))+' and ordered by quality/price ratio')
      print('\n')
      print((black('Group 1: 2, 4, 6 & 8 GB','bold')))
      print('\n')
      laptops_G1=laptops[(laptops['Product status'] == 'Brand New') & (laptops['RAM Type'] == 'RAM1')].sort_values(by = 'Ratio RAM/‚Ç¨', ascending=False).head(5)
      print(laptops_G1[['Name','Price','Brand']])
      print('\n')

      print((black('Group 2: 12, 16 & 20 GB','bold')))
      print('\n')
      laptops_G2=laptops[(laptops['Product status'] == 'Brand New') & (laptops['RAM Type'] == 'RAM2')].sort_values(by = 'Ratio RAM/‚Ç¨', ascending=False).head(5)
      print(laptops_G2[['Name','Price','Brand']])
      print('\n')

      print((black('Group 3: 24, 32, 40 & 64 GB','bold')))
      print('\n')
      laptops_G3=laptops[(laptops['Product status'] == 'Brand New') & (laptops['RAM Type'] == 'RAM3')].sort_values(by = 'Ratio RAM/‚Ç¨', ascending=False).head(5)
      print(laptops_G3[['Name','Price','Brand']])
      print('\n')
      print((black('Note: quality standard was calculated by GB/Price ratio','italic')))

      df1=laptops_G1[['Name','Price','Brand']]
      df2=laptops_G2[['Name','Price','Brand']]
      df3=laptops_G3[['Name','Price','Brand']]
      df = pd.concat([df1, df2, df3], axis=0)
      df.to_csv('recommendation2.csv',encoding='utf-8')

      print('\n')

    # SECOND HAND LAPTOPS
    if choice4 == '1' and choice5 =='2':

      print('These are the '+(black('BEST Second Hand Laptops','bold'))+' segmented by '+(black('RAM','bold'))+' and ordered by quality/price ratio')
      print('\n')
      print((black('Group 1: 2, 4, 6 & 8 GB','bold')))
      print('\n')
      laptops_G1_sh=laptops[(laptops['Product status'] == 'Refurbished') & (laptops['RAM Type'] == 'RAM1')].sort_values(by = 'Ratio RAM/‚Ç¨', ascending=False).head(5)
      print(laptops_G1_sh[['Name','Price','Brand']])
      print('\n')

      print((black('Group 2: 12, 16 & 20 GB','bold')))
      print('\n')
      laptops_G2_sh=laptops[(laptops['Product status'] == 'Refurbished') & (laptops['RAM Type'] == 'RAM2')].sort_values(by = 'Ratio RAM/‚Ç¨', ascending=False).head(5)
      print(laptops_G2_sh[['Name','Price','Brand']])
      print('\n')

      print((black('Group 3: 24, 32, 40 & 64 GB','bold')))
      print('\n')
      laptops_G3_sh=laptops[(laptops['Product status'] == 'Refurbished') & (laptops['RAM Type'] == 'RAM3')].sort_values(by = 'Ratio RAM/‚Ç¨', ascending=False).head(5)
      print(laptops_G3_sh[['Name','Price','Brand']])
      print('\n')
      print((black('Note: quality standard was calculated by GB/Price ratio','italic')))
      
      df1=laptops_G1_sh[['Name','Price','Brand']]
      df2=laptops_G2_sh[['Name','Price','Brand']]
      df3=laptops_G3_sh[['Name','Price','Brand']]
      df = pd.concat([df1, df2, df3], axis=0)
      df.to_csv('recommendation2.csv',encoding='utf-8')
      
      print('\n')



    # BRAND NEW SCREENS
    if choice4 == '2' and choice5 =='1':
     
      print('These are the '+(black('BEST New Brand Screens','bold'))+' segmented by '+(black('Inch Type','bold'))+' and ordered by quality/price ratio')
      print('\n')
      print((black('Type Inches Segmentation','bold')))
      print('\n')

      print((black('Type Inch1: ','bold'))+'below 27"')
      print('\n')
      screen_G1=screens[(screens['Product status'] == 'Brand New') & (screens['Inches Type'] == 'Inch1')].sort_values(by = 'Ratio Inches/‚Ç¨', ascending=False).head(5)
      print(screen_G1[['Name','Price','Brand']])
      print('\n')

      print((black('Type Inch2: ','bold'))+'above 27 and below 40"')
      print('\n')
      screen_G2=screens[(screens['Product status'] == 'Brand New') & (screens['Inches Type'] == 'Inch2')].sort_values(by = 'Ratio Inches/‚Ç¨', ascending=False).head(5)
      print(screen_G2[['Name','Price','Brand']])
      print('\n')

      print((black('Type Inch3: ','bold'))+'above 40"')
      print('\n')
      screen_G3=screens[(screens['Product status'] == 'Brand New') & (screens['Inches Type'] == 'Inch3')].sort_values(by = 'Ratio Inches/‚Ç¨', ascending=False).head(5)
      print(screen_G3[['Name','Price','Brand']])
      print('\n')
      print((black('Note: quality standard was calculated by Inch size/Price ratio','italic')))

      df1=screen_G1[['Name','Price','Brand']]
      df2=screen_G2[['Name','Price','Brand']]
      df3=screen_G3[['Name','Price','Brand']]
      df = pd.concat([df1, df2, df3], axis=0)
      df.to_csv('recommendation2.csv',encoding='utf-8')

      print('\n')

    # SECOND HAND SCREENS BRANDS
    if choice4 == '2' and choice5 =='2':
     
      print('These are the '+(black('BEST Second Hand Screens','bold'))+' segmented by '+(black('Inch Type','bold'))+' and ordered by quality/price ratio')
      print('\n')
      print((black('Type Inches Segmentation','bold')))
      print('\n')

      print((black('Type Inch1: ','bold'))+'below 27"')
      print('\n')
      screen_G1_sc=screens[(screens['Product status'] == 'Refurbished') & (screens['Inches Type'] == 'Inch1')].sort_values(by = 'Ratio Inches/‚Ç¨', ascending=False).head(5)
      print(screen_G1_sc[['Name','Price','Brand']])
      print('\n')

      print((black('Type Inch2: ','bold'))+'above 27 and below 40"')
      print('\n')
      screen_G2_sc=screens[(screens['Product status'] == 'Refurbished') & (screens['Inches Type'] == 'Inch2')].sort_values(by = 'Ratio Inches/‚Ç¨', ascending=False).head(5)
      print(screen_G2_sc[['Name','Price','Brand']])
      print('\n')

      print((black('Type Inch3: ','bold'))+'above 40"')
      print('\n')
      screen_G3_sc=screens[(screens['Product status'] == 'Refurbished') & (screens['Inches Type'] == 'Inch3')].sort_values(by = 'Ratio Inches/‚Ç¨', ascending=False).head(5)
      print(screen_G3_sc[['Name','Price','Brand']])
      print('\n')
      print((black('Note: quality standard was calculated by Inch size/Price ratio','italic')))

      
      df1=screen_G1_sc[['Name','Price','Brand']]
      df2=screen_G2_sc[['Name','Price','Brand']]
      df3=screen_G3_sc[['Name','Price','Brand']]
      df = pd.concat([df1, df2, df3], axis=0)
      df.to_csv('recommendation2.csv',encoding='utf-8')


      print('\n')


    print('Do you want to keep going? Y/N')
    print('\n')
    continue1 = str(input('Write your choice: '))
    print('\n')

    #CONTINUE?


    if continue1.lower() == 'y':
      m = True
      clear_output(wait=True)
    elif continue1.lower() == 'n':
      m = False
      break
    else:
      m = False
      break

# SENDING EMAIL

clear_output(wait=True)

sender_email = str(input('Which email you want to use to send the information: '))
receiver_email = e
subject = 'Hello '+n+'! Here the info you are interested'

print('For sending the email we need your email API password and press enter:')
password = getpass.getpass()

filename = ['recommendation1.csv','recommendation2.csv']
contents = ['Hope this info is useful!']

# initiating connection with SMTP server
yag = yagmail.SMTP(user=sender_email,
                   password=password)

# Adding Content and sending it
yag.send(to = receiver_email, 
         subject = subject,
         contents = contents,
         attachments = filename)

print('You received an email with these recommendations')